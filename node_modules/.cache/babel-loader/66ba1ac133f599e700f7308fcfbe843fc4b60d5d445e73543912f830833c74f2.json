{"ast":null,"code":"var _jsxFileName = \"/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Game.js\",\n  _s = $RefreshSig$();\n// import './Game.css';\n// import Board from './Board.js'\n\n// // TODO: here I will decide, winning and number of rows\n\n// function checkWinCondition(grid, mines) {\n//   let revealedCount = 0;\n//   let correctFlags = 0;\n\n//   grid.forEach(row => {\n//     row.forEach(cell => {\n//       if (cell.isRevealed) revealedCount++;\n//       if (cell.isFlagged && cell.isBomb) correctFlags++;\n//     });\n//   });\n\n//   return revealedCount + mines === grid.length * grid.length || correctFlags === mines;\n// }\n\n// function Game({ selectedLevel }) {\n//   const rows = selectedLevel === \"beginner\" ? 9 : selectedLevel === \"intermediate\" ? 16 :  24;\n//   const mines = rows === 9 ? 10 : rows === 16 ? 40 : 99;\n//   return (\n//     <div className=\"game_wrapper\">\n//       <Board rows={rows} selectedLevel={selectedLevel} mines={mines}/>\n//     </div>\n//   );\n// }\n\n// export default Game;\n\nimport './Game.css';\nimport { useState } from 'react';\nimport Board from './Board.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction checkWinCondition(grid, mines) {\n  let revealedCount = 0;\n  let correctFlags = 0;\n  grid.forEach(row => {\n    row.forEach(cell => {\n      if (cell.isRevealed) revealedCount++;\n      if (cell.isFlagged && cell.isBomb) correctFlags++;\n    });\n  });\n\n  // Check if all non-bomb cells are revealed or all bombs are flagged correctly\n  return revealedCount + mines === grid.length * grid.length || correctFlags === mines;\n}\nfunction Game({\n  selectedLevel\n}) {\n  _s();\n  const rows = selectedLevel === \"beginner\" ? 9 : selectedLevel === \"intermediate\" ? 16 : 24;\n  const mines = rows === 9 ? 10 : rows === 16 ? 40 : 99;\n  const [gameStatus, setGameStatus] = useState('playing'); // 'playing', 'won', or 'lost'\n  const [grid, setGrid] = useState(null);\n  const handleGameUpdate = updatedGrid => {\n    setGrid(updatedGrid);\n    if (gameStatus === 'playing') {\n      if (checkWinCondition(updatedGrid, mines)) {\n        setGameStatus('won');\n      }\n\n      // Check if a bomb is revealed\n      if (updatedGrid.some(row => row.some(cell => cell.isRevealed && cell.isBomb))) {\n        setGameStatus('lost');\n      }\n    }\n  };\n  const resetGame = () => {\n    setGameStatus('playing');\n    setGrid(null); // Clear the grid to trigger reinitialization in the `Board`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Level: \", selectedLevel.charAt(0).toUpperCase() + selectedLevel.slice(1)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), gameStatus === 'won' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game_status won\",\n      children: [\"\\uD83C\\uDF89 You Won! \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), gameStatus === 'lost' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game_status lost\",\n      children: [\"\\uD83D\\uDCA5 You Lost! \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      rows: rows,\n      selectedLevel: selectedLevel,\n      mines: mines,\n      grid: grid,\n      setGrid: handleGameUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"3BArtn/eQdbRaTrsRg90V2CCfI0=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","Board","jsxDEV","_jsxDEV","checkWinCondition","grid","mines","revealedCount","correctFlags","forEach","row","cell","isRevealed","isFlagged","isBomb","length","Game","selectedLevel","_s","rows","gameStatus","setGameStatus","setGrid","handleGameUpdate","updatedGrid","some","resetGame","className","children","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Game.js"],"sourcesContent":["// import './Game.css';\n// import Board from './Board.js'\n\n// // TODO: here I will decide, winning and number of rows\n\n// function checkWinCondition(grid, mines) {\n//   let revealedCount = 0;\n//   let correctFlags = 0;\n\n//   grid.forEach(row => {\n//     row.forEach(cell => {\n//       if (cell.isRevealed) revealedCount++;\n//       if (cell.isFlagged && cell.isBomb) correctFlags++;\n//     });\n//   });\n\n//   return revealedCount + mines === grid.length * grid.length || correctFlags === mines;\n// }\n\n\n// function Game({ selectedLevel }) {\n//   const rows = selectedLevel === \"beginner\" ? 9 : selectedLevel === \"intermediate\" ? 16 :  24;\n//   const mines = rows === 9 ? 10 : rows === 16 ? 40 : 99;\n//   return (\n//     <div className=\"game_wrapper\">\n//       <Board rows={rows} selectedLevel={selectedLevel} mines={mines}/>\n//     </div>\n//   );\n// }\n\n// export default Game;\n\n\nimport './Game.css';\nimport { useState } from 'react';\nimport Board from './Board.js';\n\nfunction checkWinCondition(grid, mines) {\n  let revealedCount = 0;\n  let correctFlags = 0;\n\n  grid.forEach(row => {\n    row.forEach(cell => {\n      if (cell.isRevealed) revealedCount++;\n      if (cell.isFlagged && cell.isBomb) correctFlags++;\n    });\n  });\n\n  // Check if all non-bomb cells are revealed or all bombs are flagged correctly\n  return revealedCount + mines === grid.length * grid.length || correctFlags === mines;\n}\n\nfunction Game({ selectedLevel }) {\n  const rows = selectedLevel === \"beginner\" ? 9 : selectedLevel === \"intermediate\" ? 16 : 24;\n  const mines = rows === 9 ? 10 : rows === 16 ? 40 : 99;\n\n  const [gameStatus, setGameStatus] = useState('playing'); // 'playing', 'won', or 'lost'\n  const [grid, setGrid] = useState(null);\n\n  const handleGameUpdate = (updatedGrid) => {\n    setGrid(updatedGrid);\n\n    if (gameStatus === 'playing') {\n      if (checkWinCondition(updatedGrid, mines)) {\n        setGameStatus('won');\n      }\n\n      // Check if a bomb is revealed\n      if (updatedGrid.some(row => row.some(cell => cell.isRevealed && cell.isBomb))) {\n        setGameStatus('lost');\n      }\n    }\n  };\n\n  const resetGame = () => {\n    setGameStatus('playing');\n    setGrid(null); // Clear the grid to trigger reinitialization in the `Board`\n  };\n\n  return (\n    <div className=\"game_wrapper\">\n      <h2>Level: {selectedLevel.charAt(0).toUpperCase() + selectedLevel.slice(1)}</h2>\n\n      {gameStatus === 'won' && (\n        <div className=\"game_status won\">\n          ðŸŽ‰ You Won! <button onClick={resetGame}>Play Again</button>\n        </div>\n      )}\n      {gameStatus === 'lost' && (\n        <div className=\"game_status lost\">\n          ðŸ’¥ You Lost! <button onClick={resetGame}>Try Again</button>\n        </div>\n      )}\n\n      <Board\n        rows={rows}\n        selectedLevel={selectedLevel}\n        mines={mines}\n        grid={grid}\n        setGrid={handleGameUpdate}\n      />\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}