{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState, useEffect } from 'react';\nfunction Board({\n  rows,\n  selectedLevel,\n  mines\n}) {\n  _s();\n  const [grid, setGrid] = useState([]);\n  const PlaceBomb = useCallback((grid, mines) => {\n    const newGrid = [...grid];\n    let placedMines = 0;\n    while (placedMines < mines) {\n      const row = Math.floor(Math.random() * rows);\n      const col = Math.floor(Math.random() * rows);\n      if (!newGrid[row][col].isBomb) {\n        newGrid[row][col] = {\n          ...newGrid[row][col],\n          isBomb: true\n        };\n        placedMines++;\n      }\n    }\n    return newGrid;\n  }, [rows]);\n  useEffect(() => {\n    if (rows > 0 && mines > 0) {\n      const emptyGrid = CreateGrid(rows);\n      const gridWithBombs = PlaceBomb(emptyGrid, mines);\n      setGrid(gridWithBombs);\n    }\n  }, [rows, mines, PlaceBomb]);\n}\n_s(Board, \"EqBMVSnZTQVRV2x8WKAuKvXFydo=\");\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useCallback","useState","useEffect","Board","rows","selectedLevel","mines","_s","grid","setGrid","PlaceBomb","newGrid","placedMines","row","Math","floor","random","col","isBomb","emptyGrid","CreateGrid","gridWithBombs","_c","$RefreshReg$"],"sources":["/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Board.js"],"sourcesContent":["import { useCallback, useState, useEffect } from 'react';\n\nfunction Board({ rows, selectedLevel, mines }) {\n  const [grid, setGrid] = useState([]);\n\n  const PlaceBomb = useCallback((grid, mines) => {\n    const newGrid = [...grid];\n    let placedMines = 0;\n\n    while (placedMines < mines) {\n      const row = Math.floor(Math.random() * rows);\n      const col = Math.floor(Math.random() * rows);\n\n      if (!newGrid[row][col].isBomb) {\n        newGrid[row][col] = { ...newGrid[row][col], isBomb: true };\n        placedMines++;\n      }\n    }\n\n    return newGrid;\n  }, [rows]);\n\n  useEffect(() => {\n    if (rows > 0 && mines > 0) {\n      const emptyGrid = CreateGrid(rows);\n      const gridWithBombs = PlaceBomb(emptyGrid, mines);\n      setGrid(gridWithBombs);\n    }\n  }, [rows, mines, PlaceBomb]);\n}\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAExD,SAASC,KAAKA,CAAC;EAAEC,IAAI;EAAEC,aAAa;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,SAAS,GAAGV,WAAW,CAAC,CAACQ,IAAI,EAAEF,KAAK,KAAK;IAC7C,MAAMK,OAAO,GAAG,CAAC,GAAGH,IAAI,CAAC;IACzB,IAAII,WAAW,GAAG,CAAC;IAEnB,OAAOA,WAAW,GAAGN,KAAK,EAAE;MAC1B,MAAMO,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGZ,IAAI,CAAC;MAC5C,MAAMa,GAAG,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGZ,IAAI,CAAC;MAE5C,IAAI,CAACO,OAAO,CAACE,GAAG,CAAC,CAACI,GAAG,CAAC,CAACC,MAAM,EAAE;QAC7BP,OAAO,CAACE,GAAG,CAAC,CAACI,GAAG,CAAC,GAAG;UAAE,GAAGN,OAAO,CAACE,GAAG,CAAC,CAACI,GAAG,CAAC;UAAEC,MAAM,EAAE;QAAK,CAAC;QAC1DN,WAAW,EAAE;MACf;IACF;IAEA,OAAOD,OAAO;EAChB,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEVF,SAAS,CAAC,MAAM;IACd,IAAIE,IAAI,GAAG,CAAC,IAAIE,KAAK,GAAG,CAAC,EAAE;MACzB,MAAMa,SAAS,GAAGC,UAAU,CAAChB,IAAI,CAAC;MAClC,MAAMiB,aAAa,GAAGX,SAAS,CAACS,SAAS,EAAEb,KAAK,CAAC;MACjDG,OAAO,CAACY,aAAa,CAAC;IACxB;EACF,CAAC,EAAE,CAACjB,IAAI,EAAEE,KAAK,EAAEI,SAAS,CAAC,CAAC;AAC9B;AAACH,EAAA,CA3BQJ,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}