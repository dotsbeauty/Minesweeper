{"ast":null,"code":"var _jsxFileName = \"/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Board.js\",\n  _s = $RefreshSig$();\nimport './Board.css';\nimport { useState, useEffect } from 'react';\nimport Cell from './Cell.js';\n\n// TODO: here, I will decide number of mines and number of cells required\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board({\n  rows,\n  selectedLevel,\n  mines\n}) {\n  _s();\n  console.log(\"from box: \", rows, mines);\n  const [timer, setTimer] = useState(0);\n  const grid = Array.from({\n    length: 9\n  }, () => Array.from({\n    length: 9\n  }, () => Math.random() < 0.3 ? \"X\" : \"\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board_wrapper\",\n    children: grid.flat().map((value, index) => /*#__PURE__*/_jsxDEV(Cell, {\n      value: value\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n\n  // useEffect(() => {\n  //   let interval;\n\n  //   if (selectedLevel !== null) {\n  //     setTimer(0);\n  //     interval = setInterval(() => {\n  //       setTimer((prevTimer) => prevTimer + 1);\n  //     }, 1000);\n  //   }\n\n  //   return () => {\n  //     clearInterval(interval);\n  //   };\n  // }, [selectedLevel]);\n\n  // return (\n  // <div className=\"board_wrapper\">\n  //   <div className='board_data'>\n  //     <div>\n  //       <p>Grid: {rows} x {rows}</p>\n  //     </div>\n  //     <div>\n  //       <p>Time: {timer}s</p>\n  //     </div>\n  //     <div>\n  //       <p>flags: {mines}</p>\n  //     </div>\n  //   </div>\n  //   {/* <div className={`grid grid-${rows}`}>\n  //     <Cell rows={rows} mines ={mines}/>\n  //     </div> */}\n  //   <div>\n\n  //     <Cell rows={rows} mines={mines} />\n  //   </div>\n\n  // </div>\n\n  // );\n}\n_s(Board, \"YfkIw2x09LwS269JUM8Nobh8BTk=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useState","useEffect","Cell","jsxDEV","_jsxDEV","Board","rows","selectedLevel","mines","_s","console","log","timer","setTimer","grid","Array","from","length","Math","random","className","children","flat","map","value","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Board.js"],"sourcesContent":["import './Board.css';\nimport { useState, useEffect } from 'react';\nimport Cell from './Cell.js'\n\n// TODO: here, I will decide number of mines and number of cells required\n\nfunction Board({ rows, selectedLevel, mines }) {\n  console.log(\"from box: \", rows, mines)\n  const [timer, setTimer] = useState(0);\n  const grid = Array.from({ length: 9 }, () =>\n    Array.from({ length: 9 }, () => (Math.random() < 0.3 ? \"X\" : \"\"))\n  );\n\n  return (\n    <div className=\"board_wrapper\">\n      {grid.flat().map((value, index) => (\n        <Cell key={index} value={value} />\n      ))}\n    </div>\n  );\n\n  // useEffect(() => {\n  //   let interval;\n\n  //   if (selectedLevel !== null) {\n  //     setTimer(0);\n  //     interval = setInterval(() => {\n  //       setTimer((prevTimer) => prevTimer + 1);\n  //     }, 1000);\n  //   }\n\n  //   return () => {\n  //     clearInterval(interval);\n  //   };\n  // }, [selectedLevel]);\n\n  // return (\n    // <div className=\"board_wrapper\">\n    //   <div className='board_data'>\n    //     <div>\n    //       <p>Grid: {rows} x {rows}</p>\n    //     </div>\n    //     <div>\n    //       <p>Time: {timer}s</p>\n    //     </div>\n    //     <div>\n    //       <p>flags: {mines}</p>\n    //     </div>\n    //   </div>\n    //   {/* <div className={`grid grid-${rows}`}>\n    //     <Cell rows={rows} mines ={mines}/>\n    //     </div> */}\n    //   <div>\n\n    //     <Cell rows={rows} mines={mines} />\n    //   </div>\n\n    // </div>\n    \n  // );\n}\n\nexport default Board;\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,WAAW;;AAE5B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,KAAKA,CAAC;EAAEC,IAAI;EAAEC,aAAa;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC7CC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEL,IAAI,EAAEE,KAAK,CAAC;EACtC,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMc,IAAI,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAAE,MACrCF,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAAE,MAAOC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAG,CAClE,CAAC;EAED,oBACEf,OAAA;IAAKgB,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC3BP,IAAI,CAACQ,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC5BrB,OAAA,CAACF,IAAI;MAAasB,KAAK,EAAEA;IAAM,GAApBC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;;EAGR;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;;EAEF;AACF;AAACpB,EAAA,CAtDQJ,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AAwDd,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}