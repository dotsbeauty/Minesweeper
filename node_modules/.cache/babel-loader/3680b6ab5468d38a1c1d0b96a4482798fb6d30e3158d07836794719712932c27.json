{"ast":null,"code":"var _jsxFileName = \"/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Board.js\";\nimport './Board.css';\nimport Cell from './Cell.js';\n\n// TODO: here, I will decide number of mines and number of cells required\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board({\n  rows\n}) {\n  const mines = rows === 9 ? 10 : rows === 16 ? 40 : 99;\n  console.log(\"from box: \", rows, mines);\n  const matrix = Array.from({\n    length: rows\n  }).map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: Array.from({\n      length: rows\n    }).map((_, colIndex) => /*#__PURE__*/_jsxDEV(Cell, {}, colIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))\n  }, rowIndex, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board_wrapper\",\n    children: cells\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Cell","jsxDEV","_jsxDEV","Board","rows","mines","console","log","matrix","Array","from","length","map","_","rowIndex","className","children","colIndex","fileName","_jsxFileName","lineNumber","columnNumber","cells","_c","$RefreshReg$"],"sources":["/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Board.js"],"sourcesContent":["import './Board.css';\nimport Cell from './Cell.js'\n\n// TODO: here, I will decide number of mines and number of cells required\n\nfunction Board({rows}) {\n  const mines = rows === 9 ? 10 : rows === 16 ? 40 : 99;\n  console.log(\"from box: \", rows, mines)\n\n  const matrix = Array.from({ length: rows }).map((_, rowIndex) => (\n    <div key={rowIndex} className=\"row\">\n      {/* Create a cell for each column in the current row */}\n      {Array.from({ length: rows }).map((_, colIndex) => (\n        <Cell key={colIndex} />\n      ))}\n    </div>\n  ));\n  return (\n    <div className=\"board_wrapper\">\n        {cells}\n    </div>\n  );\n}\n\nexport default Board;\n"],"mappings":";AAAA,OAAO,aAAa;AACpB,OAAOA,IAAI,MAAM,WAAW;;AAE5B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,KAAKA,CAAC;EAACC;AAAI,CAAC,EAAE;EACrB,MAAMC,KAAK,GAAGD,IAAI,KAAK,CAAC,GAAG,EAAE,GAAGA,IAAI,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE;EACrDE,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,IAAI,EAAEC,KAAK,CAAC;EAEtC,MAAMG,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEP;EAAK,CAAC,CAAC,CAACQ,GAAG,CAAC,CAACC,CAAC,EAAEC,QAAQ,kBAC1DZ,OAAA;IAAoBa,SAAS,EAAC,KAAK;IAAAC,QAAA,EAEhCP,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEP;IAAK,CAAC,CAAC,CAACQ,GAAG,CAAC,CAACC,CAAC,EAAEI,QAAQ,kBAC5Cf,OAAA,CAACF,IAAI,MAAMiB,QAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvB;EAAC,GAJMP,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKb,CACN,CAAC;EACF,oBACEnB,OAAA;IAAKa,SAAS,EAAC,eAAe;IAAAC,QAAA,EACzBM;EAAK;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACE,EAAA,GAjBQpB,KAAK;AAmBd,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}