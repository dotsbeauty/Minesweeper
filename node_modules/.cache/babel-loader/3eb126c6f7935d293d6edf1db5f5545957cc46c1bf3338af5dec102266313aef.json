{"ast":null,"code":"// import './Game.css';\n// import Board from './Board.js'\n\n// // TODO: here I will decide, winning and number of rows\n\n// function checkWinCondition(grid, mines) {\n//   let revealedCount = 0;\n//   let correctFlags = 0;\n\n//   grid.forEach(row => {\n//     row.forEach(cell => {\n//       if (cell.isRevealed) revealedCount++;\n//       if (cell.isFlagged && cell.isBomb) correctFlags++;\n//     });\n//   });\n\n//   return revealedCount + mines === grid.length * grid.length || correctFlags === mines;\n// }\n\n// function Game({ selectedLevel }) {\n//   const rows = selectedLevel === \"beginner\" ? 9 : selectedLevel === \"intermediate\" ? 16 :  24;\n//   const mines = rows === 9 ? 10 : rows === 16 ? 40 : 99;\n//   return (\n//     <div className=\"game_wrapper\">\n//       <Board rows={rows} selectedLevel={selectedLevel} mines={mines}/>\n//     </div>\n//   );\n// }\n\n// export default Game;","map":{"version":3,"names":[],"sources":["/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Game.js"],"sourcesContent":["// import './Game.css';\n// import Board from './Board.js'\n\n// // TODO: here I will decide, winning and number of rows\n\n// function checkWinCondition(grid, mines) {\n//   let revealedCount = 0;\n//   let correctFlags = 0;\n\n//   grid.forEach(row => {\n//     row.forEach(cell => {\n//       if (cell.isRevealed) revealedCount++;\n//       if (cell.isFlagged && cell.isBomb) correctFlags++;\n//     });\n//   });\n\n//   return revealedCount + mines === grid.length * grid.length || correctFlags === mines;\n// }\n\n\n// function Game({ selectedLevel }) {\n//   const rows = selectedLevel === \"beginner\" ? 9 : selectedLevel === \"intermediate\" ? 16 :  24;\n//   const mines = rows === 9 ? 10 : rows === 16 ? 40 : 99;\n//   return (\n//     <div className=\"game_wrapper\">\n//       <Board rows={rows} selectedLevel={selectedLevel} mines={mines}/>\n//     </div>\n//   );\n// }\n\n// export default Game;\n"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}