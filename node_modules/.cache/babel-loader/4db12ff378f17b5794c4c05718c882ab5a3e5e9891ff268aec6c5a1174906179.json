{"ast":null,"code":"var _jsxFileName = \"/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Board.js\",\n  _s = $RefreshSig$();\nimport './Board.css';\nimport { useCallbackuseState, useEffect } from 'react';\nimport Cell from './Cell.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board({\n  rows,\n  selectedLevel,\n  mines\n}) {\n  _s();\n  const [timer, setTimer] = useState(0);\n  const [grid, setGrid] = useState([]);\n\n  // Create rows x rows empty grid using Cell component\n  function CreateGrid(rows) {\n    const emptyGrid = Array(rows).fill(null).map(() => Array(rows).fill({\n      value: 0,\n      isBomb: false,\n      isRevealed: false\n    }));\n    return emptyGrid;\n  }\n\n  // Function to randomly place bombs\n  const PlaceBomb = useCallback((grid, mines) => {\n    const newGrid = [...grid];\n    let placedMines = 0;\n    while (placedMines < mines) {\n      const row = Math.floor(Math.random() * rows);\n      const col = Math.floor(Math.random() * rows);\n      if (!newGrid[row][col].isBomb) {\n        newGrid[row][col] = {\n          ...newGrid[row][col],\n          isBomb: true\n        };\n        placedMines++;\n      }\n    }\n    return newGrid;\n  }, [rows]);\n\n  // Initialize the grid with mines when the component mounts or rows/mines change\n  useEffect(() => {\n    if (rows > 0 && mines > 0) {\n      const emptyGrid = CreateGrid(rows);\n      const gridWithBombs = PlaceBomb(emptyGrid, mines);\n      setGrid(gridWithBombs);\n    }\n  }, [rows, mines]);\n  useEffect(() => {\n    let interval;\n    if (selectedLevel !== null) {\n      setTimer(0);\n      interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer + 1);\n      }, 1000);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [selectedLevel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board_data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Grid: \", rows, \" x \", rows]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time: \", timer, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Flags: \", mines]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `grid grid-${rows}`,\n      children: grid.map((row, rowIndex) => row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(Cell, {\n        value: cell.isBomb ? \"ðŸ’£\" : cell.value\n      }, `${rowIndex}-${colIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"p21ySh5QhCNfweNTlSjY+TTT8jc=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useCallbackuseState","useEffect","Cell","jsxDEV","_jsxDEV","Board","rows","selectedLevel","mines","_s","timer","setTimer","useState","grid","setGrid","CreateGrid","emptyGrid","Array","fill","map","value","isBomb","isRevealed","PlaceBomb","useCallback","newGrid","placedMines","row","Math","floor","random","col","gridWithBombs","interval","setInterval","prevTimer","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rowIndex","cell","colIndex","_c","$RefreshReg$"],"sources":["/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Board.js"],"sourcesContent":["import './Board.css';\nimport { useCallbackuseState, useEffect } from 'react';\nimport Cell from './Cell.js';\n\nfunction Board({ rows, selectedLevel, mines }) {\n  const [timer, setTimer] = useState(0);\n  const [grid, setGrid] = useState([]);\n\n  // Create rows x rows empty grid using Cell component\n  function CreateGrid(rows) {\n    const emptyGrid = Array(rows)\n      .fill(null)\n      .map(() => Array(rows).fill({ value: 0, isBomb: false, isRevealed: false }));\n    return emptyGrid;\n  }\n\n  // Function to randomly place bombs\n  const PlaceBomb = useCallback((grid, mines) => {\n    const newGrid = [...grid];\n    let placedMines = 0;\n\n    while (placedMines < mines) {\n      const row = Math.floor(Math.random() * rows);\n      const col = Math.floor(Math.random() * rows);\n\n      if (!newGrid[row][col].isBomb) {\n        newGrid[row][col] = { ...newGrid[row][col], isBomb: true };\n        placedMines++;\n      }\n    }\n\n    return newGrid;\n  }, [rows]);\n\n  // Initialize the grid with mines when the component mounts or rows/mines change\n  useEffect(() => {\n    if (rows > 0 && mines > 0) {\n      const emptyGrid = CreateGrid(rows);\n      const gridWithBombs = PlaceBomb(emptyGrid, mines);\n      setGrid(gridWithBombs);\n    }\n  }, [rows, mines]);\n\n  useEffect(() => {\n    let interval;\n    if (selectedLevel !== null) {\n      setTimer(0);\n      interval = setInterval(() => {\n        setTimer((prevTimer) => prevTimer + 1);\n      }, 1000);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [selectedLevel]);\n\n  return (\n    <div className=\"board_wrapper\">\n      <div className=\"board_data\">\n        <div>\n          <p>Grid: {rows} x {rows}</p>\n        </div>\n        <div>\n          <p>Time: {timer}s</p>\n        </div>\n        <div>\n          <p>Flags: {mines}</p>\n        </div>\n      </div>\n      <div className={`grid grid-${rows}`}>\n        {grid.map((row, rowIndex) =>\n          row.map((cell, colIndex) => (\n            <Cell key={`${rowIndex}-${colIndex}`} value={cell.isBomb ? \"ðŸ’£\" : cell.value} />\n          ))\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}