{"ast":null,"code":"var _jsxFileName = \"/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Cell.js\";\n// import './Cell.css';\n// import { useState, useEffect } from 'react';\n\n// // TODO: Here I will, I will travel the cell and Count nearby bomb and check whether the cell is open or not\n\n// function Cell({ rows, mines }) {\n//   const initialGrid = Array(rows).fill(null).map(() => Array(rows).fill(''));\n//   const [grid, setGrid] = useState(initialGrid);\n//   useEffect((initialGrid, rows, mines) => {\n//     const randomizeGrid = () => {\n//       const gridCopy = initialGrid.map(row => row.slice());\n//       const numXs = Math.floor(Math.random() * mines);\n\n//       for (let i = 0; i < numXs; i++) {\n//         const row = Math.floor(Math.random() * rows);\n//         const col = Math.floor(Math.random() * rows);\n//         gridCopy[row][col] = 'ðŸ’£';\n//       }\n//       console.log(gridCopy)\n\n//       return gridCopy;\n//     };\n//     setGrid(randomizeGrid());\n//   }, []);\n//   console.log(initialGrid)\n\n//   return (\n//     // <div className=\"cell_wrapper\">\n//     //   {/* <div>\n//     //     <div>\n//     //       {grid.map((row, rowIndex) =>\n//     //         row.map((cell, colIndex) => (\n//     //           <div key={`${rowIndex}-${colIndex}`}>\n//     //             {cell}\n//     //           </div>\n//     //         ))\n//     //       )}\n//     //     </div> */}\n//     //   </div>\n\n//     // </div>\n//     <div>\n//       <h1>Random X Grid</h1>\n//       <div style={{ display: 'grid', gridTemplateColumns: 'repeat(9, 40px)', gap: '5px' }}>\n//         {grid.map((row, rowIndex) =>\n//           row.map((cell, colIndex) => (\n//             <div\n//               key={`${rowIndex}-${colIndex}`}\n//               style={{\n//                 width: '40px',\n//                 height: '40px',\n//                 textAlign: 'center',\n//                 lineHeight: '40px',\n//                 border: '1px solid #ccc',\n//                 backgroundColor: cell === 'X' ? 'lightblue' : 'white',\n//                 fontWeight: 'bold',\n//               }}\n//             >\n//               {cell}\n//             </div>\n//           ))\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Cell;\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cell = ({\n  value\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: cellStyle,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_c = Cell;\nconst cellStyle = {\n  width: \"40px\",\n  height: \"40px\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  border: \"1px solid black\",\n  fontSize: \"18px\"\n};\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Cell","value","style","cellStyle","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","width","height","display","justifyContent","alignItems","border","fontSize","$RefreshReg$"],"sources":["/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Cell.js"],"sourcesContent":["// import './Cell.css';\n// import { useState, useEffect } from 'react';\n\n// // TODO: Here I will, I will travel the cell and Count nearby bomb and check whether the cell is open or not\n\n// function Cell({ rows, mines }) {\n//   const initialGrid = Array(rows).fill(null).map(() => Array(rows).fill(''));\n//   const [grid, setGrid] = useState(initialGrid);\n//   useEffect((initialGrid, rows, mines) => {\n//     const randomizeGrid = () => {\n//       const gridCopy = initialGrid.map(row => row.slice());\n//       const numXs = Math.floor(Math.random() * mines);\n\n//       for (let i = 0; i < numXs; i++) {\n//         const row = Math.floor(Math.random() * rows);\n//         const col = Math.floor(Math.random() * rows);\n//         gridCopy[row][col] = 'ðŸ’£';\n//       }\n//       console.log(gridCopy)\n\n//       return gridCopy;\n//     };\n//     setGrid(randomizeGrid());\n//   }, []);\n//   console.log(initialGrid)\n\n//   return (\n//     // <div className=\"cell_wrapper\">\n//     //   {/* <div>\n//     //     <div>\n//     //       {grid.map((row, rowIndex) =>\n//     //         row.map((cell, colIndex) => (\n//     //           <div key={`${rowIndex}-${colIndex}`}>\n//     //             {cell}\n//     //           </div>\n//     //         ))\n//     //       )}\n//     //     </div> */}\n//     //   </div>\n\n\n//     // </div>\n//     <div>\n//       <h1>Random X Grid</h1>\n//       <div style={{ display: 'grid', gridTemplateColumns: 'repeat(9, 40px)', gap: '5px' }}>\n//         {grid.map((row, rowIndex) =>\n//           row.map((cell, colIndex) => (\n//             <div\n//               key={`${rowIndex}-${colIndex}`}\n//               style={{\n//                 width: '40px',\n//                 height: '40px',\n//                 textAlign: 'center',\n//                 lineHeight: '40px',\n//                 border: '1px solid #ccc',\n//                 backgroundColor: cell === 'X' ? 'lightblue' : 'white',\n//                 fontWeight: 'bold',\n//               }}\n//             >\n//               {cell}\n//             </div>\n//           ))\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Cell;\n\nimport React from \"react\";\n\nconst Cell = ({ value }) => {\n  return (\n    <div style={cellStyle}>\n      {value}\n    </div>\n  );\n};\n\nconst cellStyle = {\n  width: \"40px\",\n  height: \"40px\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  border: \"1px solid black\",\n  fontSize: \"18px\",\n};\n\nexport default Cell;\n"],"mappings":";AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC1B,oBACEF,OAAA;IAAKG,KAAK,EAAEC,SAAU;IAAAC,QAAA,EACnBH;EAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GANIT,IAAI;AAQV,MAAMG,SAAS,GAAG;EAChBO,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAE,MAAM;EACfC,cAAc,EAAE,QAAQ;EACxBC,UAAU,EAAE,QAAQ;EACpBC,MAAM,EAAE,iBAAiB;EACzBC,QAAQ,EAAE;AACZ,CAAC;AAED,eAAehB,IAAI;AAAC,IAAAS,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}