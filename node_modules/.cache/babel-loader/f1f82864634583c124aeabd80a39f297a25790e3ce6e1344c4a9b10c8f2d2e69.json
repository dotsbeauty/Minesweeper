{"ast":null,"code":"var _jsxFileName = \"/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Board.js\",\n  _s = $RefreshSig$();\nimport './Board.css';\nimport { useState, useEffect } from 'react';\nimport Cell from './Cell.js';\n\n// TODO: here, I will decide number of mines and number of cells required\n\n//Create function to randomplace bombs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlaceBomb(mines) {}\n_c = PlaceBomb;\nfunction Board({\n  rows,\n  selectedLevel,\n  mines\n}) {\n  _s();\n  const [timer, setTimer] = useState(0);\n  useEffect(() => {\n    let interval;\n    if (selectedLevel !== null) {\n      setTimer(0);\n      interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer + 1);\n      }, 1000);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [selectedLevel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board_data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Grid: \", rows, \" x \", rows]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time: \", timer, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"flags: \", mines]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `grid grid-${rows}`,\n      children: /*#__PURE__*/_jsxDEV(Cell, {\n        value: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"ebJi34r7i5iV6ijtknLV7I/4wK8=\");\n_c2 = Board;\nexport default Board;\nvar _c, _c2;\n$RefreshReg$(_c, \"PlaceBomb\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","useEffect","Cell","jsxDEV","_jsxDEV","PlaceBomb","mines","_c","Board","rows","selectedLevel","_s","timer","setTimer","interval","setInterval","prevTimer","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","_c2","$RefreshReg$"],"sources":["/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Board.js"],"sourcesContent":["import './Board.css';\nimport { useState, useEffect } from 'react';\nimport Cell from './Cell.js'\n\n// TODO: here, I will decide number of mines and number of cells required\n\n//Create function to randomplace bombs\nfunction PlaceBomb(mines) {\n\n}\n\nfunction Board({ rows, selectedLevel, mines }) {\n  const [timer, setTimer] = useState(0);  \n\n  useEffect(() => {\n    let interval;\n    if (selectedLevel !== null) {\n      setTimer(0);\n      interval = setInterval(() => {\n        setTimer((prevTimer) => prevTimer + 1);\n      }, 1000);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [selectedLevel]);\n\n  return (\n    <div className=\"board_wrapper\">\n      <div className='board_data'>\n        <div>\n          <p>Grid: {rows} x {rows}</p>\n        </div>\n        <div>\n          <p>Time: {timer}s</p>\n        </div>\n        <div>\n          <p>flags: {mines}</p>\n        </div>\n      </div>\n      <div className={`grid grid-${rows}`}>\n        <Cell value={1}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,WAAW;;AAE5B;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,SAASA,CAACC,KAAK,EAAE,CAE1B;AAACC,EAAA,GAFQF,SAAS;AAIlB,SAASG,KAAKA,CAAC;EAAEC,IAAI;EAAEC,aAAa;EAAEJ;AAAM,CAAC,EAAE;EAAAK,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAErCC,SAAS,CAAC,MAAM;IACd,IAAIa,QAAQ;IACZ,IAAIJ,aAAa,KAAK,IAAI,EAAE;MAC1BG,QAAQ,CAAC,CAAC,CAAC;MACXC,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BF,QAAQ,CAAEG,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;MACxC,CAAC,EAAE,IAAI,CAAC;IACV;IACA,OAAO,MAAM;MACXC,aAAa,CAACH,QAAQ,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAACJ,aAAa,CAAC,CAAC;EAEnB,oBACEN,OAAA;IAAKc,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5Bf,OAAA;MAAKc,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBf,OAAA;QAAAe,QAAA,eACEf,OAAA;UAAAe,QAAA,GAAG,QAAM,EAACV,IAAI,EAAC,KAAG,EAACA,IAAI;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACNnB,OAAA;QAAAe,QAAA,eACEf,OAAA;UAAAe,QAAA,GAAG,QAAM,EAACP,KAAK,EAAC,GAAC;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACNnB,OAAA;QAAAe,QAAA,eACEf,OAAA;UAAAe,QAAA,GAAG,SAAO,EAACb,KAAK;QAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNnB,OAAA;MAAKc,SAAS,EAAE,aAAaT,IAAI,EAAG;MAAAU,QAAA,eAClCf,OAAA,CAACF,IAAI;QAACsB,KAAK,EAAE;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACZ,EAAA,CAlCQH,KAAK;AAAAiB,GAAA,GAALjB,KAAK;AAoCd,eAAeA,KAAK;AAAC,IAAAD,EAAA,EAAAkB,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}