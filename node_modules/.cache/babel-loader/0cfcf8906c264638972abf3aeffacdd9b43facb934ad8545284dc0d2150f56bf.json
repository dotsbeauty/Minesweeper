{"ast":null,"code":"var _jsxFileName = \"/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Board.js\",\n  _s = $RefreshSig$();\nimport './Board.css';\nimport Cell from './Cell.js';\n\n// TODO: here, I will decide number of mines and number of cells required\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board({\n  rows\n}) {\n  _s();\n  const mines = rows === 9 ? 10 : rows === 16 ? 40 : 99;\n  console.log(\"from box: \", rows, mines);\n  const [timer, setTimer] = useState(0); // Timer state\n  const [isGameActive, setIsGameActive] = useState(false);\n  useEffect(() => {\n    let interval;\n    if (selectedLevel !== null) {\n      setIsGameActive(true); // Game has started\n      setTimer(0); // Reset timer when game starts\n\n      interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer + 1); // Increment timer every second\n      }, 1000);\n    }\n\n    // Cleanup interval when game ends or timer is no longer needed\n    return () => {\n      clearInterval(interval);\n      setIsGameActive(false); // Game ended\n    };\n  }, [selectedLevel]);\n  const matrix = Array.from({\n    length: rows\n  }).map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: Array.from({\n      length: rows\n    }).map((_, colIndex) => /*#__PURE__*/_jsxDEV(Cell, {}, colIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, rowIndex, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Grid Size: \", rows, \" x \", rows]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" timer \", calculateTimeLeft]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"flags: \", mines]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `grid grid-${rows}`,\n      children: matrix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"tpzrpUEoPWOehiMn4+vviSJ+KNI=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Cell","jsxDEV","_jsxDEV","Board","rows","_s","mines","console","log","timer","setTimer","useState","isGameActive","setIsGameActive","useEffect","interval","selectedLevel","setInterval","prevTimer","clearInterval","matrix","Array","from","length","map","_","rowIndex","className","children","colIndex","fileName","_jsxFileName","lineNumber","columnNumber","calculateTimeLeft","_c","$RefreshReg$"],"sources":["/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Board.js"],"sourcesContent":["import './Board.css';\nimport Cell from './Cell.js'\n\n// TODO: here, I will decide number of mines and number of cells required\n\nfunction Board({ rows }) {\n  const mines = rows === 9 ? 10 : rows === 16 ? 40 : 99;\n  console.log(\"from box: \", rows, mines)\n  const [timer, setTimer] = useState(0); // Timer state\n  const [isGameActive, setIsGameActive] = useState(false);\n\n  useEffect(() => {\n    let interval;\n\n    if (selectedLevel !== null) {\n      setIsGameActive(true); // Game has started\n      setTimer(0); // Reset timer when game starts\n\n      interval = setInterval(() => {\n        setTimer((prevTimer) => prevTimer + 1); // Increment timer every second\n      }, 1000);\n    }\n\n    // Cleanup interval when game ends or timer is no longer needed\n    return () => {\n      clearInterval(interval);\n      setIsGameActive(false); // Game ended\n    };\n  }, [selectedLevel]);\n\n  const matrix = Array.from({ length: rows }).map((_, rowIndex) => (\n    <div key={rowIndex} className=\"row\">\n      {Array.from({ length: rows }).map((_, colIndex) => (\n        <Cell key={colIndex} />\n      ))}\n    </div>\n  ));\n\n  return (\n    <div className=\"board_wrapper\">\n      <div className='game'>\n        <p>Grid Size: {rows} x {rows}</p>\n        <p> timer {calculateTimeLeft}</p>\n        <p>flags: {mines}</p>\n      </div>\n      <div className={`grid grid-${rows}`}>\n        {matrix}\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}