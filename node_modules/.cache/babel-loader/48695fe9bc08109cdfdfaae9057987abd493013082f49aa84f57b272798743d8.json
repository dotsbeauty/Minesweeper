{"ast":null,"code":"var _jsxFileName = \"/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Board.js\",\n  _s = $RefreshSig$();\nimport './Board.css';\nimport { useState, useEffect } from 'react';\nimport Cell from './Cell.js';\n\n// TODO: here, I will decide number of mines and number of cells required\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board({\n  rows,\n  selectedLevel\n}) {\n  _s();\n  const mines = rows === 9 ? 10 : rows === 16 ? 40 : 99;\n  console.log(\"from box: \", rows, mines);\n  const [timer, setTimer] = useState(0); // Timer state\n  const [isGameActive, setIsGameActive] = useState(false);\n  useEffect(() => {\n    let interval;\n    if (selectedLevel !== null) {\n      setIsGameActive(isGameActive = true);\n      setTimer(0);\n      interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer + 1);\n      }, 1000);\n    }\n    return () => {\n      clearInterval(interval);\n      setIsGameActive(false);\n    };\n  }, [selectedLevel]);\n  const matrix = Array.from({\n    length: rows\n  }).map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: Array.from({\n      length: rows\n    }).map((_, colIndex) => /*#__PURE__*/_jsxDEV(Cell, {}, colIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, rowIndex, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Grid Size: \", rows, \" x \", rows]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Time: \", timer, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"flags: \", mines]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `grid grid-${rows}`,\n      children: matrix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"tpzrpUEoPWOehiMn4+vviSJ+KNI=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useState","useEffect","Cell","jsxDEV","_jsxDEV","Board","rows","selectedLevel","_s","mines","console","log","timer","setTimer","isGameActive","setIsGameActive","interval","setInterval","prevTimer","clearInterval","matrix","Array","from","length","map","_","rowIndex","className","children","colIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/drishti/Projects/Github/Games/Minesweeper/minesweeper/src/Board.js"],"sourcesContent":["import './Board.css';\nimport { useState, useEffect } from 'react';\nimport Cell from './Cell.js'\n\n// TODO: here, I will decide number of mines and number of cells required\n\nfunction Board({ rows, selectedLevel }) {\n  const mines = rows === 9 ? 10 : rows === 16 ? 40 : 99;\n  console.log(\"from box: \", rows, mines)\n  const [timer, setTimer] = useState(0); // Timer state\n  const [isGameActive, setIsGameActive] = useState(false);\n\n  useEffect(() => {\n    let interval;\n\n    if (selectedLevel !== null) {\n      setIsGameActive(isGameActive= true);\n      setTimer(0);\n\n      interval = setInterval(() => {\n        setTimer((prevTimer) => prevTimer + 1);\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(interval);\n      setIsGameActive(false);\n    };\n  }, [selectedLevel]);\n\n  const matrix = Array.from({ length: rows }).map((_, rowIndex) => (\n    <div key={rowIndex} className=\"row\">\n      {Array.from({ length: rows }).map((_, colIndex) => (\n        <Cell key={colIndex} />\n      ))}\n    </div>\n  ));\n\n  return (\n    <div className=\"board_wrapper\">\n      <div className='game'>\n        <p>Grid Size: {rows} x {rows}</p>\n        <p> Time: {timer}s</p>\n        <p>flags: {mines}</p>\n      </div>\n      <div className={`grid grid-${rows}`}>\n        {matrix}\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}